/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//Imports
import java.awt.Color;//Import to allow colour access
import java.io.*;  //imports input output libraries
import javax.xml.parsers.*;   //imports the library to be able to read(parse) xml files
import javax.xml.transform.*;   //library used to transform source to result
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.*;   //allows for XML processing
import org.xml.sax.*;   //assists in XML processing

/**
 * XML: This project takes the entered information and creates or updates the XML file
 * June 23rd 2021 
 * @author emma
 */
//
public class application extends javax.swing.JFrame {

    /**
     * Creates new form application
     */
    public application() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        txtYear = new javax.swing.JTextField();
        txtCompany = new javax.swing.JTextField();
        txtStyle = new javax.swing.JTextField();
        txtColour = new javax.swing.JTextField();
        txtMileage = new javax.swing.JTextField();
        txtTra = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        btnExit = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtYear.setFont(new java.awt.Font("Copperplate", 0, 14)); // NOI18N
        txtYear.setForeground(new java.awt.Color(102, 102, 102));
        txtYear.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtYear.setText("Enter Year");
        txtYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtYearFocusGained(evt);
            }
        });

        txtCompany.setFont(new java.awt.Font("Copperplate", 0, 14)); // NOI18N
        txtCompany.setForeground(new java.awt.Color(102, 102, 102));
        txtCompany.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCompany.setText("Enter Company");
        txtCompany.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCompanyFocusGained(evt);
            }
        });

        txtStyle.setFont(new java.awt.Font("Copperplate", 0, 14)); // NOI18N
        txtStyle.setForeground(new java.awt.Color(102, 102, 102));
        txtStyle.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtStyle.setText("Enter Style");
        txtStyle.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtStyleFocusGained(evt);
            }
        });

        txtColour.setFont(new java.awt.Font("Copperplate", 0, 14)); // NOI18N
        txtColour.setForeground(new java.awt.Color(102, 102, 102));
        txtColour.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtColour.setText("Enter Colour");
        txtColour.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtColourFocusGained(evt);
            }
        });

        txtMileage.setFont(new java.awt.Font("Copperplate", 0, 14)); // NOI18N
        txtMileage.setForeground(new java.awt.Color(102, 102, 102));
        txtMileage.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtMileage.setText("Enter Mileage");
        txtMileage.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMileageFocusGained(evt);
            }
        });

        txtTra.setFont(new java.awt.Font("Copperplate", 0, 14)); // NOI18N
        txtTra.setForeground(new java.awt.Color(102, 102, 102));
        txtTra.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTra.setText("Enter Transmission");
        txtTra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTraFocusGained(evt);
            }
        });

        btnNew.setFont(new java.awt.Font("Copperplate", 2, 13)); // NOI18N
        btnNew.setForeground(new java.awt.Color(57, 10, 10));
        btnNew.setText("Create new XML file");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Copperplate", 2, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(57, 10, 10));
        btnUpdate.setText("Update XML");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Copperplate", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 0));
        jLabel1.setText("Car Inventory");

        jTextField1.setText("jTextField1");

        btnExit.setFont(new java.awt.Font("Copperplate", 0, 13)); // NOI18N
        btnExit.setForeground(new java.awt.Color(102, 0, 0));
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Copperplate", 0, 14)); // NOI18N
        btnClear.setText("Clear TextBoxes");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pinkCarGif.gif"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtStyle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtColour, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtMileage, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTra)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtCompany))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtYear))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(btnUpdate))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnClear)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtColour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMileage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        try {  //this trys to catch any expections in the code

            DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();   //this allows for the creation of the XML file
            DocumentBuilder docBuilder = docFactory.newDocumentBuilder();  //enables information to read from XML file 

            // root elements
            Document doc = docBuilder.newDocument();
            Element rootElement = doc.createElement("Inventory");  //calls the root element in the XML "Inventory"
            doc.appendChild(rootElement);

            // Car elements
            Element car = doc.createElement("Car");// Creates a child branch called "car"
            rootElement.appendChild(car);

            // Year elements
            Element year = doc.createElement("Year");// Creates a child branch called "Year"
            year.appendChild(doc.createTextNode(txtYear.getText()));// Takes the element from the textfield's input
            car.appendChild(year);//Adds the element to the branch

            // Company elements
            Element company = doc.createElement("Company"); //Creates a child branch called "company"
            company.appendChild(doc.createTextNode(txtCompany.getText()));// Takes the element from the textfield's input
            car.appendChild(company);//Adds the element to the branch

            // Style elements
            Element style = doc.createElement("Style");//Creates a child branch called "Style"
            style.appendChild(doc.createTextNode(txtStyle.getText()));// Takes the element from the textfield's input
            car.appendChild(style);//Adds the element to the branch

            // colour elements
            Element colour = doc.createElement("Color");//Creates a child branch called "Color"
            colour.appendChild(doc.createTextNode(txtColour.getText()));// Takes the element from the textfield's input
            car.appendChild(colour);//Adds the element to the branch

            // Mileage elements
            Element mileage = doc.createElement("Mileage");//Creates a child branch called "Mileage"
            mileage.appendChild(doc.createTextNode(txtMileage.getText()));// Takes the element from the textfield's input
            car.appendChild(mileage);//Adds the element to the branch

            // transmission elements
            Element transmission = doc.createElement("Transmission");//Creates a child branch called "Transmission"
            transmission.appendChild(doc.createTextNode(txtTra.getText()));// Takes the element from the textfield's input
            car.appendChild(transmission);//Adds the element to the branch

            // write the content into  the xml file
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            Transformer transformer = transformerFactory.newTransformer();

            DOMSource source = new DOMSource(doc);
            transformer.setOutputProperty(OutputKeys.INDENT, "yes");   //makes sure the XML file is formatted nicely with indentation
            transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "4");  //makes sure the XML file is formatted nicely with indent space of 4 
            StreamResult result = new StreamResult(new File("car.xml"));  //creates the file called car

            // Output to console screen  for testing, but you need to comment-out the previous "StreamResult result" line above. 
            //StreamResult result = new StreamResult(System.out);
            transformer.transform(source, result);

            System.out.println("File Saved In Project Directory");  //outputs to console "File Saved in Project Directory"
        } catch (ParserConfigurationException pce) {   //trys to catch any exceptions
            pce.printStackTrace();
        } catch (TransformerException tfe) {
            tfe.printStackTrace();
        }
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {//Trys to catch exceptions
            String filepath = "car.xml";//Determines the xml file
            DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
            Document doc = docBuilder.parse(filepath);// Parses the XML file
            
            //Get the first element by tag name directly 
            Node car = doc.getElementsByTagName("car").item(0);

            // Year elements
            Node a = doc.getElementsByTagName("Year").item(0);//Creates node a, Gets the "year" element by tag name directly 
            a.setTextContent(txtYear.getText()); //Sets a to be the input from the textfield
            
            // Company elements
            Node b = doc.getElementsByTagName("Company").item(0);//Creates Node b, Gets the "Company" element by tag name directly 
            b.setTextContent(txtCompany.getText());//Sets b to be the input from the textfield

            // Style elements
            Node c = doc.getElementsByTagName("Style").item(0);//Creates Node c, Gets the "Style" element by tag name directly 
            c.setTextContent(txtStyle.getText());//Sets c to be the input from the textfield
            
            //Colour elements
            Node d = doc.getElementsByTagName("Color").item(0);//Creates Node d, Gets the "Color" element by tag name directly 
            d.setTextContent(txtColour.getText());//Sets d to be the input from the textfield
            
            // Mileage elements
            Node e = doc.getElementsByTagName("Mileage").item(0);//Creates Node e, Gets the "Mileage" element by tag name directly 
            e.setTextContent(txtMileage.getText());//Sets e to be the input from the textfield
            
             // Mileage elements
            Node f = doc.getElementsByTagName("Transmission").item(0);//Creates Node f, Gets the "Transmission" element by tag name directly 
            f.setTextContent(txtTra.getText());//Sets f to be the input from the textfield
            
            // write the content into xml file
            TransformerFactory transformerFactory = TransformerFactory.newInstance();
            Transformer transformer = transformerFactory.newTransformer();
            transformer.setOutputProperty(OutputKeys.INDENT, "yes");   //makes sure the XML file is formatted nicely with indentation
            transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "4");  //makes sure the XML file is formatted nicely with indent space of 4 
            DOMSource source = new DOMSource(doc);
            //Transforms the source and result into the xml
            StreamResult result = new StreamResult(new File(filepath));
            transformer.transform(source, result);

            System.out.println("Your XML is updated, check the project directory for output");

        } catch (ParserConfigurationException pce) {
            pce.printStackTrace();
        } catch (TransformerException tfe) {
            tfe.printStackTrace();
        } catch (IOException ioe) {
            ioe.printStackTrace();
        } catch (SAXException sae) {
            sae.printStackTrace();
        }

    }//GEN-LAST:event_btnUpdateActionPerformed
// If textfield clicked then drop the shadow text, clear the box and make the font black
    private void txtYearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtYearFocusGained
        if (txtYear.getText().equals("Enter Year")) {
            txtYear.setText("");
        }
        txtYear.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtYearFocusGained
// If textfield clicked then drop the shadow text, clear the box and make the font black
    private void txtCompanyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCompanyFocusGained
        if (txtCompany.getText().equals("Enter Company")) {
            txtCompany.setText("");
        }
        txtCompany.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtCompanyFocusGained
// If textfield clicked then drop the shadow text, clear the box and make the font black
    private void txtStyleFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStyleFocusGained
        if (txtStyle.getText().equals("Enter Style")) {
            txtStyle.setText("");
        }
        txtStyle.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtStyleFocusGained
// If textfield clicked then drop the shadow text, clear the box and make the font black
    private void txtColourFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtColourFocusGained
        if (txtColour.getText().equals("Enter Colour")) {
            txtColour.setText("");
        }
        txtColour.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtColourFocusGained
// If textfield clicked then drop the shadow text, clear the box and make the font black
    private void txtMileageFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMileageFocusGained
        if (txtMileage.getText().equals("Enter Mileage")) {
            txtMileage.setText("");
        }
        txtMileage.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtMileageFocusGained
// If textfield clicked then drop the shadow text, clear the box and make the font black
    private void txtTraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTraFocusGained
        if (txtTra.getText().equals("Enter Transmission")) {
            txtTra.setText("");
        }
        txtTra.setForeground(Color.BLACK);
    }//GEN-LAST:event_txtTraFocusGained
// Exit button 
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed
//Cler button, clears the textfields and sets the font to black
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtYear.setText(" ");
        txtYear.setForeground(Color.BLACK);
        txtCompany.setText(" ");
        txtCompany.setForeground(Color.BLACK);
        txtStyle.setText(" ");
        txtStyle.setForeground(Color.BLACK);
        txtColour.setText(" ");
        txtColour.setForeground(Color.BLACK);
        txtMileage.setText(" ");
        txtMileage.setForeground(Color.BLACK);
        txtTra.setText(" ");
        txtTra.setForeground(Color.BLACK);
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(application.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new application().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtColour;
    private javax.swing.JTextField txtCompany;
    private javax.swing.JTextField txtMileage;
    private javax.swing.JTextField txtStyle;
    private javax.swing.JTextField txtTra;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
